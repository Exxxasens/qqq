{"version":3,"sources":["components/Menu/index.ts","components/Menu/Menu.tsx","components/Field/index.ts","components/Field/Field.tsx","components/Loading/index.ts","components/Loading/Loading.tsx","components/Game/Game.tsx","components/Game/index.ts","components/hooks/useRequest.tsx","components/contexts/ApiContext.tsx","ApiService.ts","components/CreateGame/CreateGame.tsx","components/CreateGame/index.ts","components/Authentication/index.ts","components/Authentication/Authentication.tsx","actions.ts","components/Logout/index.ts","components/Logout/Logout.tsx","components/Connect/index.tsx","components/Connect/Connect.tsx","components/Account/index.ts","components/Account/Account.tsx","components/App/index.ts","components/App/App.tsx","utils/parseJWT.ts","reducer.ts","index.tsx"],"names":["Menu","connect","state","console","log","username","className","to","activeClassName","Field","field","isUserFirstPlayer","isUserSecondPlayer","onCellClick","nextStep","gameStatus","Cell","onClick","value","classNames","content","push","join","Row","row","handleClick","map","cell","x","y","Loading","Header","game","hasOwnProperty","status","next_step","first_player","second_player","getNextStepUsername","winner","score","getWinner","GameInfo","Settings","line_to_win","multiple_lines","_id","Game","userId","token","id","useParams","history","useHistory","React","useState","setGame","currentSocket","setCurrentSocket","error","setError","isLoading","setLoading","onGameUpdate","payload","onGameData","onSocketError","useEffect","client","socket","window","localStorage","getItem","on","emit","game_id","message","useRequest","request","inititalState","useMemo","data","setData","cancelled","then","catch","err","instance","fetchResource","url","config","a","fetch","response","handleNetworkErrors","ok","Error","statusText","json","result","clear","login","password","body","method","headers","JSON","stringify","setItem","register","fetchWithToken","Authorization","getMe","this","ApiContext","createContext","CreateGame","first_step","size","api","useContext","useCallback","options","setSize","firstStep","setFirstStep","isSubmitted","setSubmitted","lineToWin","setLineToWin","multipleLines","setMuiltipleLines","onSubmit","e","preventDefault","htmlFor","type","onChange","target","HTMLInputElement","parseInt","HTMLSelectElement","String","Authentication","dispatch","setUsername","setPassword","setType","length","name","disabled","Logout","logout","Connect","setID","Account","games_played","won","StatsBlock","n","wonStat","Number","toFixed","App","isAuth","Boolean","path","exact","parseJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","parse","reducer","action","defaultState","parseJWT","store","createStore","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.62491c68.chunk.js","sourcesContent":["import Menu from './Menu';\nexport default Menu;","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport './Menu.scss';\n\nconst Menu = ({ username }: any) => {\n    console.log('menu component')\n    return (\n        <div className='menu'>\n\n            <h1>\n                Добро пожаловать, { username }\n            </h1>\n\n            <div className='list'>\n                <div className='item'>\n                    <NavLink to='/me' activeClassName='selected'>Мой аккаунт</NavLink>\n                </div>\n\n                <div className='item'>\n                    <NavLink to='/create' activeClassName='selected'>Создать игру</NavLink>\n                </div>\n\n                <div className='item'>\n                    <NavLink to='/game/connect' activeClassName='selected'>Присоединиться к игре</NavLink>\n                </div>\n\n                <div className='item'>\n                    <NavLink to='/logout' activeClassName='selected'>Выход</NavLink>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    console.log(state);\n    const { username } = state;\n    return {\n        username\n    }\n}\n\nexport default connect(mapStateToProps)(Menu);","import Field from './Field';\nexport default Field;","import React from 'react';\nimport './Field.scss';\n\nconst Field = ({ field, isUserFirstPlayer, isUserSecondPlayer, onCellClick, nextStep, gameStatus }: any) => {\n    const Cell = ({ onClick, value }: any) => {\n        let classNames = ['cell'];\n        let content = null;\n\n        if (!value) classNames.push('empty');\n\n        if (isUserFirstPlayer && nextStep === 1 && !value && gameStatus === 'started') {\n            classNames.push('step');\n        }\n\n        if (isUserSecondPlayer && nextStep === 2 && !value && gameStatus === 'started') {\n            classNames.push('step');\n        }\n\n        if (value === 1) content = 'X';\n        if (value === 2) content = 'O';\n\n        return (\n            <div className={classNames.join(' ')} onClick={onClick}>\n                { content }\n            </div>\n        )\n    }\n\n    const Row  = ({ row, handleClick }: any) => {\n        console.log(row);\n        return (\n            <div className='row'>\n                { row.map((cell: number, x: number) => <Cell onClick={() => handleClick(x)} value={cell} />) }\n            </div>\n        )\n    }\n\n    return (\n        <div className='field'>\n            { field.map((row: number[], y: number) => <Row row={row} handleClick={(x: number) => onCellClick(y, x)} />) }\n        </div>\n    )\n}\n\nexport default Field;","import Loading from './Loading';\nexport default Loading;","import React from 'react';\nimport './Loading.scss';\n\nconst Loading = () => {\n    return (\n        <div className='loading-wrapper'>\n            <div className=\"loadingio-spinner-dual-ring-drwpaa1s9x6\">\n                <div className=\"ldio-of4mr6z053l\">\n                    <div></div>\n                    <div><div>\n                    </div></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading;","import React from 'react';\nimport { connect } from 'react-redux';\nimport socket from 'socket.io-client';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Field from '../Field';\nimport Loading from '../Loading';\nimport './Game.scss';\n\ntype Game = {\n    first_player?: string,\n    second_player?: string,\n    field?: number[][],\n    next_step?: number,\n    status?: 'created' | 'started' | 'finished'\n}\n\nconst Header = ({ game }:any) => {\n\n    if (!(game && game.hasOwnProperty('status'))) {\n        return null;\n    }\n\n    const { status } = game;\n    const getNextStepUsername = () => {\n        const { next_step, first_player, second_player } = game;\n        return (next_step === 1) ? first_player : second_player;\n    }\n    const getWinner = () => {\n        let { winner, score, status } = game;\n        if (winner === 1) {\n            return 'Победил игрок ' + game.first_player + ', со счетом: ' + score;\n        }\n\n        if (winner === 2) {\n            return 'Победил игрок ' + game.second_player + ', со счетом: ' + score;\n        }\n\n        return 'Ничья';\n    }\n    if (status === 'started') {\n        return (\n            <div className='game-info'>\n                <h1> Ход игрока { getNextStepUsername() } </h1>\n            </div>\n        )\n    }\n    if (status === 'finished') {\n        return (\n            <div className='game-info'>\n                <h1>{ getWinner() }</h1>\n            </div>\n        )\n    }\n    \n    return null;\n}\n\nconst GameInfo = ({ game }: any) => {\n\n    const Settings = () => {\n        const { line_to_win, multiple_lines, _id } = game;\n        return (\n            <div className='settings'>\n\n                <div>Игровые настройки:</div>\n\n                <div className='settings-list'>\n                    <div>\n                        Номер игры: { _id }\n                    </div>\n                    <div>\n                        Размер линии: { line_to_win }\n                    </div>\n                    <div>\n                        Собрать как можно больше линий: { (multiple_lines) ? 'Да' : 'Нет' }\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n    const { first_player, second_player } = game;\n\n    return (\n        <>\n        <Header/>\n        <Settings/>\n        <div className='players'>\n            <div>\n                <div className='title'>Игрок 1:</div>\n                <div className='name'>{ first_player }</div>\n            </div>\n            <div>\n                <div className='title'>Игрок 2:</div>\n                <div className='name'>{ second_player || 'Ожидание игрока' }</div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nconst Game = ({ userId, token, username }: any) => {\n    const { id }:any = useParams();\n    const history = useHistory();\n    const initialState:any = null;\n    const [game, setGame] = React.useState(initialState);\n    const [currentSocket, setCurrentSocket] = React.useState(initialState);\n    const [error, setError] = React.useState(null);\n    const [isLoading, setLoading] = React.useState(true);\n\n    const isUserFirstPlayer = game && game.hasOwnProperty('first_player') && game.first_player === username;\n    const isUserSecondPlayer = game && game.hasOwnProperty('second_player') && game.second_player === username;\n\n    const handleCellClick = (y:number, x:number) => {\n        const { next_step } = game;\n        if ((next_step === 1 && isUserFirstPlayer) || (next_step === 2 && isUserSecondPlayer)) {\n            console.log({ game_id: id, token: userId, y, x });\n            currentSocket.emit('step', { game_id: id, token, y, x });\n        }\n    }\n\n    const onGameUpdate = (payload = {}) => {\n        console.log('game_update', payload);\n        return setGame((state: any) => {\n            if (!state) state = {};\n            return { ...state, ...payload };\n        });\n    }\n\n    const onGameData = (payload = {}) => {\n        console.log('game_data', payload);\n        setGame(payload);\n        setLoading(false);\n    }\n\n    const onSocketError = (error: any) => {\n        setError(error);\n    }\n\n    const handleExit = () => {\n        history.push('/');\n    }\n\n    React.useEffect(() => {\n        const client = socket();\n        \n        setCurrentSocket(client);\n\n        const token = window.localStorage.getItem('token');\n\n        client.on('join_game_announcement', payload => {\n            console.log('user connected to game', payload);\n        });\n\n        client.on('leave_game_announcement', payload => console.log('leave_game_announcement', payload));\n        client.on('game_update', onGameUpdate);\n        client.on('game_data', onGameData);\n        client.on('error', onSocketError);\n\n        client.emit('join_game', { token, game_id: id });\n\n        return () => {\n            client.emit('leave_game', { token, game_id: id });\n        }\n\n    }, [id]);\n\n    // component loading...\n    if (isLoading && !error) return <Loading/>\n\n    // component error\n    if (error) return (\n        <div className='game'>\n            <div className='error'>\n                { error }\n            </div>\n        </div>\n    )\n\n    // successfully loaded\n    const { field, next_step, status } = game;\n\n    if (error) {\n\n        <div className='error'>\n            { error.message }\n        </div>\n\n    }\n\n    return (\n        <div className='game-wrapper'>\n            <Header game={game}/>\n\n            <div className='game'>\n\n                <GameInfo game={game} />\n\n                <Field \n                    field={field}\n                    nextStep={next_step}\n                    onCellClick={handleCellClick} \n                    isUserFirstPlayer={isUserFirstPlayer}\n                    isUserSecondPlayer={isUserSecondPlayer}\n                    gameStatus={status}\n                />\n\n                <div className='btn-wrapper'>\n                    <button onClick={handleExit}>Выход</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        username: state.username,\n        userId: state.userId,\n        token: state.token\n    }\n}\n\nexport default connect(mapStateToProps)(Game);","import Game from './Game';\nexport default Game;","import React from 'react';\n\ntype RequestStatus = 'loading' | 'error' | 'ok';\ntype RequestState = {\n    data: any,\n    status: RequestStatus\n}\n\nconst useRequest = (request: any) => {\n    const inititalState:RequestState = React.useMemo(() => ({\n        data: null, status: 'loading'\n    }), []);\n    const [data, setData] = React.useState(inititalState);\n\n    React.useEffect(() => {\n        var cancelled = false;\n        setData(inititalState);\n        \n        request()\n            .then((data: any) => !cancelled ? setData({ data, status: 'ok' }) : null)  \n            .catch((err: any) => setData({ data: err, status: 'error' }));\n\n        return () => {\n            cancelled = true\n        };\n    \n    }, [request, inititalState]);\n    \n    return data;\n}\n\nexport default useRequest;","import React from 'react';\nimport ApiService from '../../ApiService';\nconst instance = new ApiService();\nconst ApiContext = React.createContext(instance);\nexport default ApiContext;","type ServerResponse = {\n    error: boolean,\n    result: any\n}\n\nclass ApiService {\n    token: string\n\n    constructor() {\n        const token:string = window.localStorage.getItem('token') || '';\n        this.token = token;\n    }\n\n    fetchResource = async (url: string, config: object) => {\n        console.log(config);\n        const response = await fetch(url, config);\n        return this.handleNetworkErrors(response);\n    }\n\n    handleNetworkErrors = async (response: Response) => {\n        if (!response.ok) {\n            throw new Error(response.statusText);\n        }\n        const { error, result }:ServerResponse = await response.json();\n        if (error) {\n\n            if (result === 'Токен не валиден') {\n                console.log('token deleted')\n                localStorage.clear();\n            }\n\n            throw new Error(result);\n        }\n        return result;\n    }\n\n    login = async (username: string, password: string) => {\n        const body = {\n            username,\n            password\n        }\n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        }\n        const token = await this.fetchResource('/api/login', config);\n        this.token = token;\n        window.localStorage.setItem('token', token);\n        return token;\n    }\n\n    register = async (username: string, password: string) => {\n        const body = {\n            username,\n            password\n        }\n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        }\n        return this.fetchResource('/api/register', config);\n    }\n\n    fetchWithToken = async (url: string, config:any = {}) => {\n        if (!url) throw new Error('Url is required parameter');\n        const Authorization = 'Bearer ' + this.token;\n        if (config.hasOwnProperty('headers')) {\n            config.headers.Authorization = Authorization;\n        } else {\n            config.headers = {\n                Authorization\n            }\n        }\n\n        return this.fetchResource(url, config);\n    }\n\n    getMe = () => {\n        return this.fetchWithToken(`api/user/me`, { method: 'POST' });\n    }\n\n}\n\nexport default ApiService","import React from 'react';\nimport Loading from '../Loading';\nimport useRequest from '../hooks/useRequest';\nimport { Redirect } from 'react-router-dom';\nimport ApiContext from '../contexts/ApiContext';\nimport './CreateGame.scss';\n\ntype CreateGameProps = {\n    first_step?: number,\n    size?: number,\n    line_to_win?: number,\n    multiple_lines?: boolean\n}\n\nconst SelectGameParams = () => {\n    const [size, setSize] = React.useState(3);\n    const [firstStep, setFirstStep] = React.useState(3);\n    const [isSubmitted, setSubmitted] = React.useState(false);\n    const [lineToWin, setLineToWin] = React.useState(3);\n    const [multipleLines, setMuiltipleLines] = React.useState(true)\n\n    const handleSizeChange = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLInputElement) {\n            const value = parseInt(e.target.value);\n            if (!value || value > 10 || value < 3) return;\n\n            if (lineToWin > value) {\n                setLineToWin(value);\n            }\n\n            return setSize(value)\n        }\n    }\n\n    const handleStepSelect = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLSelectElement) {\n            const value = parseInt(e.target.value);\n            if (value > 0 && value < 4) {\n                setFirstStep(value);\n            }\n        } \n    }\n\n    const handleLineToWin = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLInputElement) {\n            const value = parseInt(e.target.value);\n            if (!value) return \n\n            if (value > size) return setLineToWin(size);\n            if (value < 2) return setLineToWin(2)\n\n            return setLineToWin(value)\n        }\n    }\n\n    const handleMultipleLinesChange = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLSelectElement) {\n            const value = e.target.value;\n            if (value === \"true\") setMuiltipleLines(true);\n            if (value === \"false\") setMuiltipleLines(false);\n        }\n\n    }\n    \n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n\n        return setSubmitted(true);\n    }\n\n    if (isSubmitted) \n        return <CreateGame \n                size={size} \n                first_step={firstStep} \n                line_to_win={lineToWin} \n                multiple_lines={multipleLines} \n            />\n\n    return (\n        <div className='create-game'>\n            <h1>\n                Создание новой игры\n            </h1>\n            <div className='discription'>\n                Пожалуйста, выберите параметры для создания игры.\n            </div>\n            <form className='form' onSubmit={handleSubmit}>\n\n                <div className='input-wrapper'>\n                    <label htmlFor='field-size'>\n                        Размер игрового поля:\n                    </label>\n                    <input id='field-size' type='number' value={size} onChange={handleSizeChange}/>\n                </div>\n\n                <div className='input-wrapper'>\n                    <label htmlFor=\"first-step\">\n                        Первый ход:\n                    </label>\n                    <select id='first-step' onChange={handleStepSelect} value={firstStep}>\n                        <option value='1'>X</option>\n                        <option value='2'>O</option>\n                        <option value='3'>Рандомно</option>\n                    </select>\n                </div>\n\n                <div className='input-wrapper'>\n                    <label htmlFor=\"line-to-win\">\n                        Размер линии:\n                    </label>\n                    <input id='line-to-win' type='number' value={lineToWin} onChange={handleLineToWin}/>\n                </div>\n\n                <div className='input-wrapper'>\n                    <label htmlFor=\"mul-line\">\n                        Условие победы:\n                    </label>\n                    <select id='mul-line' onChange={handleMultipleLinesChange} value={String(multipleLines)}>\n                        <option value='true'>Собрать как можно больше линий</option>\n                        <option value='false'>Собрать линию первым</option>\n                    </select>\n                </div>\n\n                <div className='submit-btn-wrapper'>\n                    <button type='submit'>Создать</button>\n                </div>\n\n            </form>\n\n        </div>\n    )\n}\n\nconst CreateGame = ({ first_step = 1, size = 3, line_to_win, multiple_lines }:CreateGameProps) => {\n    const api = React.useContext(ApiContext);\n    const request = React.useCallback(() => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ first_step, size, line_to_win, multiple_lines })\n        };\n        return api.fetchWithToken('/api/game/create', options);\n    }, [api, first_step, size, line_to_win, multiple_lines]);\n\n    const { data, status } = useRequest(request);\n\n    if (status === 'ok') {\n        const url = `/game/${data}`;\n        return <Redirect to={url}/>\n    }\n    // Todo: error component\n    if (status === 'error') {\n        return <div>Error</div>\n    }\n\n    if (status === 'loading') {\n        return <Loading/>\n    }\n}\n\nexport default SelectGameParams;","import CreateGame from './CreateGame';\nexport default CreateGame;","import Authentication from './Authentication';\nexport default Authentication;","import React from 'react';\nimport './Authentication.scss';\nimport ApiContext from '../contexts/ApiContext';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions'; \n\nconst Authentication = ({ login }: any): any => {\n    const api = React.useContext(ApiContext);\n    const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [isLoading, setLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [type, setType] = React.useState('login');\n\n    React.useEffect(() => {\n        setUsername('');\n        setPassword('');\n        setError(null);\n    }, [type]);\n\n    const onUsernameChange = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLInputElement) {\n            let { value } = e.target;\n            setUsername(value);\n        }\n    }\n\n    const onPasswordChange = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLInputElement) {\n            let { value } = e.target;\n            setPassword(value);\n        }\n    }\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (isLoading) return;\n\n        if (type === 'register') {\n\n            if (password.length < 6) {\n                return setError('Пароль слишком короткий. Минимальная длина 6 символов');\n            }\n\n            if (username.length < 4) {\n                return setError('Никнейм слишком короткий. Минимальная длина 4 символа.');\n            }\n            \n            setLoading(true);\n            setError(null);\n\n            return api.register(username, password)\n                .then(() => {\n                    setError('Пользователь успешно зарегистрирован');\n                    setLoading(false);\n                })\n                .catch(err => {\n                    setError(err.message);\n                    setLoading(false);\n                });\n        }\n\n        if (username.length > 0 && password.length > 0) {\n            setLoading(true);\n            setError(null);\n            api.login(username, password)\n                .then(token => {\n                    setLoading(false);\n                    setError(null);\n                    login(token);\n                })\n                .catch(err => {\n                    setError(err.message);\n                    setLoading(false);\n                })\n        }\n\n    }\n\n    return (\n        <div className='login-page-wrapper'>\n            <div className='login-page'>\n                <div className='header'>\n                    <h1>\n                        { type === 'login' && 'Авторизация' }\n                        { type === 'register' && 'Регистрация' } \n                    </h1>\n                </div>\n                <div className='description'>\n                    <p>\n                        Для использования сервиса требуется авторизация.\n                    </p>\n                    <p>\n                        Пожалуйста введите логин и пароль для {(type === 'register') ? 'регистрации' : 'авторизации'}.\n                    </p>\n                </div>\n                <form className='login-form' onSubmit={handleSubmit}>\n                    <div className='username-input-wrapper'>\n                        <div className='label-wrapper'>\n                            <label className='username-label'>Никнейм</label>\n                        </div>\n                        <div className='input-wrapper'>\n                            <input \n                                className='username-input'\n                                type='text'\n                                name='username'\n                                onChange={onUsernameChange} \n                                value={username}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='password-input-wrapper'>\n                        <div className='label-wrapper'>\n                            <label className='password-label'>Пароль</label>\n                        </div>\n                        <div className='input-wrapper'>\n                            <input\n                                className='password-input'\n                                type='password'\n                                name='username'\n                                onChange={onPasswordChange}\n                                value={password}\n                            />\n                        </div>\n                    </div>\n\n                    {\n                        error && (\n                            <div className='error'>\n                                { error }\n                            </div>\n                        )\n                    }\n\n                    <div className='submit-btn-wrapper'>\n                        <button type='submit' className='submit-btn' disabled={isLoading}>\n                            {(type === 'register') ? 'Регистрация' : 'Войти'}\n                        </button>\n                    </div>\n\n                </form>\n\n                { type === 'login' && (\n                    <div className='switch'>\n                        Нет аккаунта?\n                        <button onClick={() => setType('register')} className='switch-btn'>\n                            Регистрация\n                        </button>\n                    </div>\n                )}\n\n                { type === 'register' && (\n                    <div className='switch'>\n                        Уже есть аккаунт?\n                        <button onClick={() => setType('login')} className='switch-btn'>\n                            Войти\n                        </button>\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n\n}\n\nconst mapActionToProps = (dispatch: any) => {\n    return {\n        login: (token: string) => dispatch(login(token))\n    }\n}\n\nexport default connect(null, mapActionToProps)(Authentication);","export const login = (token: string) => {\n    return {\n        type: 'USER_LOGIN',\n        payload: {\n            token\n        }\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: 'USER_LOGOUT',\n        payload: {}\n    }\n}","import Logout from './Logout';\nexport default Logout;","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions';\n// import ApiContext from '../contexts/ApiContext';\n// import useRequest from '../hooks/useRequest';\n\n\nconst Logout = ({ logout, userId }: any) => {\n    // eslint-disable-next-line\n\n    React.useEffect(() => {\n        logout();\n    }, []);\n\n    /*\n    const api = React.useContext(ApiContext);\n    const request = React.useCallback(() => {\n        return api.logout();\n    }, [api]);\n\n    const { status } = useRequest(request);\n\n    React.useEffect(() => {\n        if (status === 'ok') logout();\n    }, [status, logout]);\n\n    // TODO: loading animation\n    if (status === 'loading') return (\n        <div>\n            loading...\n        </div>\n    )\n    if (status === 'ok') return <Redirect to='/'></Redirect>\n    if (status === 'error') {\n        // TODO: error handling\n        return (\n            <div>\n                Unexpected error\n            </div>\n        )\n    }\n    */\n\n    if (!userId) {\n        console.log('no user id')\n        return <Redirect to='/'></Redirect>\n    }\n\n    return null;\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        username: state.username,\n        userId: state.userId\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","import Connect from './Connect';\nexport default Connect;","import React from 'react';\nimport './Connect.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst Connect = () => {\n    const history = useHistory();\n    const [id, setID] = React.useState('');\n\n    const handleInputChange = (e: React.ChangeEvent) => {\n        if (e.target instanceof HTMLInputElement) {\n            let value = e.target.value;\n            setID(value);\n        }\n    }\n\n    const createURL = (gameId: string) => `/game/${gameId}`;\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (id.length > 0) {\n            history.push(createURL(id));\n        }\n    }\n\n    return (\n        <div className='connect'>\n            <form onSubmit={handleSubmit}>\n                <div className='input-wrapper'>\n                    <label htmlFor=\"game-id\">\n                        Номер игры:\n                    </label>\n                    <input id='game-id' type='text' value={id} onChange={handleInputChange}/>\n                </div>\n                <div className='btn-wrapper'>\n                    <button className='connect-btn' type='submit'>\n                        Подключиться\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Connect;","import Account from './Account';\nexport default Account;","import React from 'react';\nimport './Account.scss';\nimport useRequest from '../hooks/useRequest';\nimport ApiContext from '../contexts/ApiContext';\nimport Loading from '../Loading';\n\nconst Account = () => {\n    const api = React.useContext(ApiContext);\n    const request = React.useCallback(() => {\n        return api.getMe();\n    }, []);\n\n    const { data, status } = useRequest(request);\n\n    const getPercent = (n: number) => {\n        \n        return (Number(n.toFixed(5)) * 100) + '%';\n    }\n\n    if (status === 'error') {\n        return (\n            <div className='error'>\n                <h1>Ошибка</h1>\n                <div>{ data }</div>\n            </div>\n        )\n    }\n\n    if (status === 'loading') {\n        return <Loading/>\n    }\n\n    if (status === 'ok') {\n        const { username, games_played, won } = data;\n        \n        const StatsBlock = () => {\n\n            let wonStat = null\n            if (won === 0) {\n                wonStat = <div>Побед: { 0 }</div>\n            } else {\n                wonStat = <div>Побед: { won } ({ getPercent(won / games_played)  })</div>\n            }\n\n            return (\n                <>\n                    <div>Всего игр сыграно: { games_played }</div>\n                    { wonStat }\n                </>\n            )\n\n\n        }\n\n        return (\n            <div className='account'>\n                <div>\n                    <h1>\n                        Статистика пользователя { username }\n                    </h1>\n    \n                    <div className='stats'>\n    \n                        <StatsBlock/>\n                        \n                    </div>\n    \n                </div>\n    \n            </div>\n        )\n    }\n}\n\nexport default Account;","import App from './App'\nexport default App;","import React from 'react';\nimport Menu from '../Menu';\nimport { Switch, Route, BrowserRouter as Router  } from 'react-router-dom'\nimport './App.scss';\nimport { connect } from 'react-redux';\nimport Game from '../Game';\nimport CreateGame from '../CreateGame';\nimport Authentication from '../Authentication';\nimport Logout from '../Logout';\nimport Connect from '../Connect';\nimport Account from '../Account';\n\ntype AppProps = {\n    userId: string\n};\n\nconst App = ({ userId }: AppProps) => {\n    const isAuth:boolean = Boolean(userId);\n\n    return (\n        <Router>\n            <div className='app'>\n                {\n                    isAuth ? \n                    (\n                        <Switch>\n                            <Route path='/' exact>\n                                <Menu/>\n                            </Route>\n\n                            <Route path='/create'>\n                                <Menu/>\n                                <CreateGame/>\n                            </Route>\n\n                            <Route path='/game/connect'>\n                                <Menu/>\n                                <Connect/>\n                            </Route>\n\n                            <Route path='/game/:id' exact>\n                                <Game/>\n                            </Route>\n\n                            <Route path='/logout'>\n                                <Logout/>\n                            </Route>\n\n                            <Route path='/me'>\n                                <Account/>\n                            </Route>\n\n                        </Switch>\n                    )\n                    :\n                    (\n                        <Switch>\n                            <Route path='/logout'>\n                                <Logout/>\n                            </Route>\n                            <Route path='/'>\n                                <Authentication/>\n                            </Route>\n                        </Switch>\n                    )\n                }\n            </div>\n        </Router>\n    )\n}\n\nconst mapStateToProps = (state: any): AppProps => {\n    return {\n        userId: state.userId\n    }\n}\n\nexport default connect(mapStateToProps)(App);","export default function parseJwt (token: string) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload);\n};","import parseJWT from './utils/parseJWT';\n\ntype ActionType = {\n    type: 'USER_LOGIN' | 'USER_LOGOUT',\n    payload: any\n}\n\nconst reducer = (state: any, action: ActionType) => {\n\n    const defaultState = {\n        userId: '',\n        username: '',\n        token: ''\n    }\n\n    if (!state) {\n        const token = window.localStorage.getItem('token');\n        if (token) {\n            const { id, username } = parseJWT(token);\n            return {\n                ...defaultState,\n                userId: id,\n                username,\n                token\n            }\n        }\n        return {\n            ...defaultState\n        }\n    }\n\n    switch (action.type) {\n        case 'USER_LOGIN':\n            const { token } = action.payload;\n            const { id, username } = parseJWT(token);\n            return {\n                ...state,\n                userId: id,\n                username,\n                token\n            }\n\n        case 'USER_LOGOUT':\n            localStorage.clear();\n            return {\n                ...state,\n                userId: null,\n                token: null,\n                username: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reducer from './reducer';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</React.StrictMode>,\n\troot\n);\n"],"sourceRoot":""}